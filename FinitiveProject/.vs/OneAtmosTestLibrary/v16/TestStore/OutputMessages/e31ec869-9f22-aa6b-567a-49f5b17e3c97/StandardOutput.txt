Full project path (Batch Execution):=>>>>>>>D:\Finitive_internal_Triangle\Finitive_26_new\finitive_internal\OneAtmosphere\bin\Debug
No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        private readonly ScenarioContext _scenarioContext;

        public StepDefinitions(ScenarioContext scenarioContext)
        {
            _scenarioContext = scenarioContext;
        }
        [Given(@"Navigate to TaxEx url and enter username and password")]
        public void GivenNavigateToTaxExUrlAndEnterUsernameAndPassword()
        {
            _scenarioContext.Pending();
        }
        
        [Given(@"Navigate to Atmosphere application as the user '(.*)'")]
        public void GivenNavigateToAtmosphereApplicationAsTheUser(string payrollTaxContactUserName0)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Navigate to Process > Import screen")]
        public void ThenNavigateToProcessImportScreen()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Import '(.*)' Xml into application for portlet for '(.*)'")]
        public void ThenImportXmlIntoApplicationForPortletFor(string xMLForReconcilationPacket0, string downloads1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Update the TaxEx Test Data File for the Test Script '(.*)'")]
        public void ThenUpdateTheTaxExTestDataFileForTheTestScript(string p0)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Navigate back to TaxEx")]
        public void ThenNavigateBackToTaxEx()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Navigate to Process > Schedule screen and filter with the company name")]
        public void ThenNavigateToProcessScheduleScreenAndFilterWithTheCompanyName()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Schedule all the records")]
        public void ThenScheduleAllTheRecords()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Navigate to Company > QTD Status screen and filter with the company name")]
        public void ThenNavigateToCompanyQTDStatusScreenAndFilterWithTheCompanyName()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Filter with '(.*)' year")]
        public void ThenFilterWithYear(string current0)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Generate and publish company packets quarter wise for '(.*)' year")]
        public void ThenGenerateAndPublishCompanyPacketsQuarterWiseForYear(string current0)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Filter with '(.*)' year")]
        public void ThenFilterWithYear(string previous0)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Generate and publish company packets quarter wise for '(.*)' year")]
        public void ThenGenerateAndPublishCompanyPacketsQuarterWiseForYear(string previous0)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Navigate to QA Admin site for '(.*)'")]
        public void ThenNavigateToQAAdminSiteFor(string payrollTaxContactUserName0)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Navigate to Company tab in QA Admin Site and filter with company name")]
        public void ThenNavigateToCompanyTabInQAAdminSiteAndFilterWithCompanyName()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on ViewDetails icon under Tax section")]
        public void ThenClickOnViewDetailsIconUnderTaxSection()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Get the Data from TaxEx Test Data File for the Test Script '(.*)' and Assign them to the user")]
        public void ThenGetTheDataFromTaxExTestDataFileForTheTestScriptAndAssignThemToTheUser(string p0)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on the Company Set Up under downloads link in Tax Dashboard and verify the downloaded file")]
        public void ThenClickOnTheCompanySetUpUnderDownloadsLinkInTaxDashboardAndVerifyTheDownloadedFile()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on the Company Tax Up under downloads link in Tax Dashboard and verify the downloaded file")]
        public void ThenClickOnTheCompanyTaxUpUnderDownloadsLinkInTaxDashboardAndVerifyTheDownloadedFile()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on the all company packets and reconciliation packets under Current Year and verify downloads")]
        public void ThenClickOnTheAllCompanyPacketsAndReconciliationPacketsUnderCurrentYearAndVerifyDownloads()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on the all company packets and reconciliation packets under Previous Year and verify downloads")]
        public void ThenClickOnTheAllCompanyPacketsAndReconciliationPacketsUnderPreviousYearAndVerifyDownloads()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Naviagte back to OSV AtmospherePage")]
        public void ThenNaviagteBackToOSVAtmospherePage()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on view details link")]
        public void ThenClickOnViewDetailsLink()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Navigate to Off Cycles tab")]
        public void ThenNavigateToOffCyclesTab()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on download link and Verfity '(.*)' File Name and Button Value as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerfityFileNameAndButtonValueAs(string p0, string p1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Navigate to Check Registers tab")]
        public void ThenNavigateToCheckRegistersTab()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Navigate to Exceptions tab")]
        public void ThenNavigateToExceptionsTab()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on ViewDetails icon under Treasury section")]
        public void ThenClickOnViewDetailsIconUnderTreasurySection()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Navigate to fully funded tab")]
        public void ThenNavigateToFullyFundedTab()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on ViewDetails icon under Garnishment Worklet")]
        public void ThenClickOnViewDetailsIconUnderGarnishmentWorklet()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"click on download link and Verify '(.*)' File Name and Category Type as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerifyFileNameAndCategoryTypeAs(string withholdingImpoundAnalysisSummary0, string p1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"click on download link and Verify '(.*)' File Name and Category Type as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerifyFileNameAndCategoryTypeAs(string withholdingPaymentSummary0, string p1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on View Details under Invoice Coding Rule section")]
        public void ThenClickOnViewDetailsUnderInvoiceCodingRuleSection()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Navigate to Suppliers tab")]
        public void ThenNavigateToSuppliersTab()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"click on download link and Verify '(.*)' File Name and Category Type as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerifyFileNameAndCategoryTypeAs(string impoundAnalysisSummaryDetails0, string p1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"click on download link and Verify '(.*)' File Name and Category Type as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerifyFileNameAndCategoryTypeAs(string dailyProcessingSummaryDetails0, string p1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"click on download link and Verify '(.*)' File Name and Category Type as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerifyFileNameAndCategoryTypeAs(string quarterlyBalncingAllTaxDetails0, string p1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"click on download link and Verify '(.*)' File Name and Category Type as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerifyFileNameAndCategoryTypeAs(string quarterEndSummaryDetails0, string p1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"click on download link and Verify '(.*)' File Name and Category Type as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerifyFileNameAndCategoryTypeAs(string yearlyBalancingDetail0, string p1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"click on download link and Verify '(.*)' File Name and Category Type as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerifyFileNameAndCategoryTypeAs(string yearEndSummaryDetails0, string p1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on Covid(.*) Supplemental Form Data Link")]
        public void ThenClickOnCovidSupplementalFormDataLink(int p0)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on Navigate back button")]
        public void ThenClickOnNavigateBackButton()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on Covid(.*) Deferred Liabilites link")]
        public void ThenClickOnCovidDeferredLiabilitesLink(int p0)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on download link and Verfity '(.*)' File Name and Button Value as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerfityFileNameAndButtonValueAs(string covidDeferredLiability0, string p1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on Covid(.*) Federal Tax Credit Link")]
        public void ThenClickOnCovidFederalTaxCreditLink(int p0)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on download link and Verfity '(.*)' File Name and Button Value as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerfityFileNameAndButtonValueAs(string federalTaxCredit0, string p1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on Covid(.*) Deferred Tax Code Link")]
        public void ThenClickOnCovidDeferredTaxCodeLink(int p0)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on download link and Verfity '(.*)' File Name and Button Value as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerfityFileNameAndButtonValueAs(string taxDeferralStatus0, string p1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on Missing Power of Attorney link in Atmosphere")]
        public void ThenClickOnMissingPowerOfAttorneyLinkInAtmosphere()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on download link and Verfity '(.*)' File Name and Button Value as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerfityFileNameAndButtonValueAs(string missingPoA0, string p1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on Invalid SSN link in atmosphere")]
        public void ThenClickOnInvalidSSNLinkInAtmosphere()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on download link and Verfity '(.*)' File Name and Button Value as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerfityFileNameAndButtonValueAs(string invalidSSN0, string p1)
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on Missing Tax Id/Account link in atmosphere")]
        public void ThenClickOnMissingTaxIdAccountLinkInAtmosphere()
        {
            _scenarioContext.Pending();
        }
        
        [Then(@"Click on download link and Verfity '(.*)' File Name and Button Value as '(.*)'")]
        public void ThenClickOnDownloadLinkAndVerfityFileNameAndButtonValueAs(string missingTaxIdOrAccountNumber0, string p1)
        {
            _scenarioContext.Pending();
        }
    }
}

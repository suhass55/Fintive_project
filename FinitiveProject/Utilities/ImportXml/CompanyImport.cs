
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using SeleniumAutomation.XMLGeneration;


namespace TaxEx.ImportXML
{

    public class ICompanyImport
    {
        public static CompanyImport temp;

        public ICompanyImport()
        {
                        
        }

        public bool Initialize()
        {
            temp = new CompanyImport();
            try
            {                
                temp.Company = new CompanyImportCompany[] { 
                new CompanyImportCompany{
                }
            };


                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }

        }

        public CompanyImport GetData()
        {
            return temp;
        }
        
    }



    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class Address
    {

        private EffectiveAddress physicalAddressField;

        private EffectiveAddress mailingAddressField;

        /// <remarks/>
        public EffectiveAddress PhysicalAddress
        {
            get
            {
                return this.physicalAddressField;
            }
            set
            {
                this.physicalAddressField = value;
            }
        }

        /// <remarks/>
        public EffectiveAddress MailingAddress
        {
            get
            {
                return this.mailingAddressField;
            }
            set
            {
                this.mailingAddressField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute("Payee", Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class EffectiveAddress
    {

        private System.DateTime asOfDateField;

        private bool asOfDateFieldSpecified;

        private string nameField;

        private string line1Field;

        private string line2Field;

        private string cityField;

        private string stateField;

        private string zipField;

        private string countryField;

        private string noteField;

        private string pSDCodeField;

        public static int c = 0;

        public EffectiveAddress()
        {

        }

        public bool AddPhysicalAddress()
        {
            ICompanyImport.temp.Company[0].Address = new Address();
            ICompanyImport.temp.Company[0].Address.PhysicalAddress = this.AddDataInTemp();

            return true;
        }


        public bool AddMailingAddress()
        {

            ICompanyImport.temp.Company[0].Address.MailingAddress = this.AddDataInTemp();
            return true;
        }

        //Method to be called by each fitnesse table ....
        public EffectiveAddress AddDataInTemp()
        {
            EffectiveAddress ea = new EffectiveAddress();

            ea.AsOfDate = this.AsOfDate;
            ea.AsOfDateSpecified = true;
            ea.Line1 = this.Line1;
            ea.Line2 = this.Line2;
            ea.City = this.City;
            ea.State = this.State;
            ea.zipField = this.zipField;
            ea.Country = this.Country;
            ea.Note = this.Note;

            return ea;
        }

        public bool ContactAddressAdded()
        {
            EffectiveAddress ea = new EffectiveAddress();

            ea.AsOfDate = this.AsOfDate;
            ea.AsOfDateSpecified = true;
            ea.Line1 = this.Line1;
            ea.Line2 = this.Line2;
            ea.City = this.City;
            ea.State = this.State;
            ea.Zip = this.Zip;
            ea.Country = this.Country;
            ea.Note = this.Note;

            ICompanyImport.temp.Company[0].Contact.Address = ea;    //check it ...
            return true;

        }

        public bool EmployeeAddressAdded()
        {
            EffectiveAddress ea = new EffectiveAddress();

            ea.AsOfDate = this.AsOfDate;
            ea.AsOfDateSpecified = true;
            ea.Line1 = this.Line1;
            ea.Line2 = this.Line2;
            ea.City = this.City;
            ea.State = this.State;
            ea.Zip = this.Zip;
            ea.Country = this.Country;

            if (ICompanyImport.temp.Company[0].EmployeeSetup[c].Address == null)
                ICompanyImport.temp.Company[0].EmployeeSetup[c].Address = new EffectiveAddress();

            ICompanyImport.temp.Company[0].EmployeeSetup[c].Address = ea;

            c++;
            return true;

        }


        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime AsOfDate
        {
            get
            {
                return this.asOfDateField;
            }
            set
            {
                this.asOfDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AsOfDateSpecified
        {
            get
            {
                return this.asOfDateFieldSpecified;
            }
            set
            {
                this.asOfDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Line1
        {
            get
            {
                return this.line1Field;
            }
            set
            {
                this.line1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Line2
        {
            get
            {
                return this.line2Field;
            }
            set
            {
                this.line2Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string City
        {
            get
            {
                return this.cityField;
            }
            set
            {
                this.cityField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string State
        {
            get
            {
                return this.stateField;
            }
            set
            {
                this.stateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Zip
        {
            get
            {
                return this.zipField;
            }
            set
            {
                this.zipField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Country
        {
            get
            {
                return this.countryField;
            }
            set
            {
                this.countryField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Note
        {
            get
            {
                return this.noteField;
            }
            set
            {
                this.noteField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PSDCode
        {
            get
            {
                return this.pSDCodeField;
            }
            set
            {
                this.pSDCodeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public partial class Phone
    {

        private string countryCodeField;

        private string areaCodeField;

        private string localNumberField;


        public bool PhoneAdded()
        {
            try
            {
                Phone ph = new Phone();

                ph.CountryCode = this.CountryCode;
                ph.AreaCode = this.AreaCode;
                ph.LocalNumber = this.LocalNumber;

                ICompanyImport.temp.Company[0].Contact.Phone = new Phone();
                ICompanyImport.temp.Company[0].Contact.Phone = ph;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }

        public bool FaxAdded()
        {
            try
            {
                Phone fax = new Phone();

                fax.CountryCode = this.CountryCode;
                fax.AreaCode = this.AreaCode;
                fax.LocalNumber = this.LocalNumber;

                //ICompanyImport.temp.Company[0].Contact.Phone = new Phone();               
                ICompanyImport.temp.Company[0].Contact.Fax = fax;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CountryCode
        {
            get
            {
                return this.countryCodeField;
            }
            set
            {
                this.countryCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AreaCode
        {
            get
            {
                return this.areaCodeField;
            }
            set
            {
                this.areaCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LocalNumber
        {
            get
            {
                return this.localNumberField;
            }
            set
            {
                this.localNumberField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public partial class CompanyServiceType
    {

        private CompanyServiceTypeService serviceField;

        private bool serviceFieldSpecified;

        private CompanyServiceTypeCompanyType companyTypeField;

        private bool companyTypeFieldSpecified;

        private CompanyServiceTypeCompanyFederalFiling companyFederalFilingField;

        private bool companyFederalFilingFieldSpecified;

        private bool thirdPartySickPayField;

        private bool thirdPartySickPayFieldSpecified;

        public bool StatusAdded()
        {
            try
            {
                CompanyServiceType cst = new CompanyServiceType();

                cst.Service = this.Service;
                cst.ServiceSpecified = true;
                cst.CompanyType = this.CompanyType;
                cst.CompanyTypeSpecified = true;
                cst.ThirdPartySickPay = this.ThirdPartySickPay;
                cst.ThirdPartySickPaySpecified = true;

                ICompanyImport.temp.Company[0].ServiceType.Status = new CompanyServiceType();
                ICompanyImport.temp.Company[0].ServiceType.Status = cst;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }





        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CompanyServiceTypeService Service
        {
            get
            {
                return this.serviceField;
            }
            set
            {
                this.serviceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceSpecified
        {
            get
            {
                return this.serviceFieldSpecified;
            }
            set
            {
                this.serviceFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CompanyServiceTypeCompanyType CompanyType
        {
            get
            {
                return this.companyTypeField;
            }
            set
            {
                this.companyTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyTypeSpecified
        {
            get
            {
                return this.companyTypeFieldSpecified;
            }
            set
            {
                this.companyTypeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CompanyServiceTypeCompanyFederalFiling CompanyFederalFiling
        {
            get
            {
                return this.companyFederalFilingField;
            }
            set
            {
                this.companyFederalFilingField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyFederalFilingSpecified
        {
            get
            {
                return this.companyFederalFilingFieldSpecified;
            }
            set
            {
                this.companyFederalFilingFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ThirdPartySickPay
        {
            get
            {
                return this.thirdPartySickPayField;
            }
            set
            {
                this.thirdPartySickPayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThirdPartySickPaySpecified
        {
            get
            {
                return this.thirdPartySickPayFieldSpecified;
            }
            set
            {
                this.thirdPartySickPayFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum CompanyServiceTypeService
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum CompanyServiceTypeCompanyType
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum CompanyServiceTypeCompanyFederalFiling
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute("Status", Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class EffectiveStatus
    {

        private System.DateTime asOfDateField;

        private bool asOfDateFieldSpecified;

        private EffectiveStatusStatus statusField;

        private bool statusFieldSpecified;

        public static int c = 0;

        public bool StatusAdded()
        {
            try
            {
                EffectiveStatus es = new EffectiveStatus();

                es.AsOfDate = this.AsOfDate;
                es.AsOfDateSpecified = true;
                es.Status = this.Status;
                es.StatusSpecified = true;

                ICompanyImport.temp.Company[0].Status = new EffectiveStatus();
                ICompanyImport.temp.Company[0].Status = es;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }

        public bool PayCycleStatusAdded()
        {
            try
            {
                EffectiveStatus es =     new EffectiveStatus();

                es.AsOfDate = this.AsOfDate;
                es.AsOfDateSpecified = true;
                es.Status = this.Status;
                es.StatusSpecified = true;

                if (ICompanyImport.temp.Company[0].PayCycle[c].Status == null)
                    ICompanyImport.temp.Company[0].PayCycle[c].Status = new EffectiveStatus();

                ICompanyImport.temp.Company[0].PayCycle[c].Status = es;

                c++;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }



        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime AsOfDate
        {
            get
            {
                return this.asOfDateField;
            }
            set
            {
                this.asOfDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AsOfDateSpecified
        {
            get
            {
                return this.asOfDateFieldSpecified;
            }
            set
            {
                this.asOfDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public EffectiveStatusStatus Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified
        {
            get
            {
                return this.statusFieldSpecified;
            }
            set
            {
                this.statusFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum EffectiveStatusStatus
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class ServiceType
    {

        private CompanyServiceType statusField;

        private PacketDeliveryType[] packetDeliveryTypeField;

        private System.DateTime asOfDateField;

        private bool asOfDateFieldSpecified;

        private string pEOField;

        private string payMasterField;

        public bool ServiceTypeAdded()
        {
            try
            {
                ServiceType st = new ServiceType();

                st.AsOfDate = this.AsOfDate;
                st.AsOfDateSpecified = true;
                st.PEO = this.PEO;
                st.PayMaster = this.PayMaster;

                ICompanyImport.temp.Company[0].ServiceType = new ServiceType();
                ICompanyImport.temp.Company[0].ServiceType = st;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }

        /// <remarks/>
        public CompanyServiceType Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PacketDeliveryType")]
        public PacketDeliveryType[] PacketDeliveryType
        {
            get
            {
                return this.packetDeliveryTypeField;
            }
            set
            {
                this.packetDeliveryTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime AsOfDate
        {
            get
            {
                return this.asOfDateField;
            }
            set
            {
                this.asOfDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AsOfDateSpecified
        {
            get
            {
                return this.asOfDateFieldSpecified;
            }
            set
            {
                this.asOfDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PEO
        {
            get
            {
                return this.pEOField;
            }
            set
            {
                this.pEOField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PayMaster
        {
            get
            {
                return this.payMasterField;
            }
            set
            {
                this.payMasterField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum PacketDeliveryType
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class Reporting
    {

        private bool employeeWageDetailField;

        private bool employeeWageDetailFieldSpecified;

        private bool worksiteReportingField;

        private bool worksiteReportingFieldSpecified;

        private bool employerW2ReportingField;

        private bool employerW2ReportingFieldSpecified;

        private bool employeeW2Field;

        private bool employeeW2FieldSpecified;


        public bool ReportingAdded()
        {
            try
            {
                Reporting ra = new Reporting();

                ra.EmployeeWageDetail = this.EmployeeWageDetail;
                ra.EmployeeWageDetailSpecified = true;
                ra.WorksiteReporting = this.WorksiteReporting;
                ra.WorksiteReportingSpecified = true;
                ra.EmployerW2Reporting = this.EmployerW2Reporting;
                ra.employerW2ReportingField = true;
                ra.EmployeeW2 = this.EmployeeW2;
                ra.EmployeeW2Specified = true;

                ICompanyImport.temp.Company[0].Reporting = new Reporting();
                ICompanyImport.temp.Company[0].Reporting = ra;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }


        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool EmployeeWageDetail
        {
            get
            {
                return this.employeeWageDetailField;
            }
            set
            {
                this.employeeWageDetailField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployeeWageDetailSpecified
        {
            get
            {
                return this.employeeWageDetailFieldSpecified;
            }
            set
            {
                this.employeeWageDetailFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool WorksiteReporting
        {
            get
            {
                return this.worksiteReportingField;
            }
            set
            {
                this.worksiteReportingField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorksiteReportingSpecified
        {
            get
            {
                return this.worksiteReportingFieldSpecified;
            }
            set
            {
                this.worksiteReportingFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool EmployerW2Reporting
        {
            get
            {
                return this.employerW2ReportingField;
            }
            set
            {
                this.employerW2ReportingField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployerW2ReportingSpecified
        {
            get
            {
                return this.employerW2ReportingFieldSpecified;
            }
            set
            {
                this.employerW2ReportingFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool EmployeeW2
        {
            get
            {
                return this.employeeW2Field;
            }
            set
            {
                this.employeeW2Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployeeW2Specified
        {
            get
            {
                return this.employeeW2FieldSpecified;
            }
            set
            {
                this.employeeW2FieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class Category
    {

        private string nameField;

        private string codeField;

        public bool CategoryAdded()
        {
            try
            {
                Category cat = new Category();

                cat.Name = this.Name;
                cat.Code = this.Code;

                ICompanyImport.temp.Company[0].Category = new Category();
                ICompanyImport.temp.Company[0].Category = cat;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }


        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class Contact
    {

        private ContactName nameField;

        private Phone phoneField;

        private Phone faxField;

        private EffectiveAddress addressField;

        private string titleField;

        private string emailField;

        public bool ContactAdded()
        {
            try
            {
                Contact con = new Contact();

                con.Title = this.Title;
                con.Email = this.Email;

                ICompanyImport.temp.Company[0].Contact = new Contact();
                ICompanyImport.temp.Company[0].Contact = con;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }



        /// <remarks/>
        public ContactName Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public Phone Phone
        {
            get
            {
                return this.phoneField;
            }
            set
            {
                this.phoneField = value;
            }
        }

        /// <remarks/>
        public Phone Fax
        {
            get
            {
                return this.faxField;
            }
            set
            {
                this.faxField = value;
            }
        }

        /// <remarks/>
        public EffectiveAddress Address
        {
            get
            {
                return this.addressField;
            }
            set
            {
                this.addressField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                this.titleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Email
        {
            get
            {
                return this.emailField;
            }
            set
            {
                this.emailField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public partial class ContactName
    {

        private string firstField;

        private string lastField;

        private string middleField;

        public bool ContactNameAdded()
        {
            try
            {
                ContactName conname = new ContactName();

                conname.First = this.First;
                conname.Last = this.lastField;
                conname.Middle = this.Middle;

                ICompanyImport.temp.Company[0].Contact.Name = new ContactName();
                ICompanyImport.temp.Company[0].Contact.Name = conname;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }


        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string First
        {
            get
            {
                return this.firstField;
            }
            set
            {
                this.firstField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Last
        {
            get
            {
                return this.lastField;
            }
            set
            {
                this.lastField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Middle
        {
            get
            {
                return this.middleField;
            }
            set
            {
                this.middleField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class PayCycle
    {

        private EffectiveStatus statusField;

        private string codeField;

        private string descriptionField;

        public static int count = 0;

        public bool PayCycleAdded()
        {
            try
            {
                PayCycle[] pc = new PayCycle[] { new PayCycle() };

                pc[0].Code = this.Code;
                pc[0].Description = this.Description;

                if (ICompanyImport.temp.Company[0].PayCycle == null)
                    ICompanyImport.temp.Company[0].PayCycle = new PayCycle[10];

                ICompanyImport.temp.Company[0].PayCycle[count] = pc[0];

                count++;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }


        /// <remarks/>
        public EffectiveStatus Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class TaxIdentifier
    {

        private OtherIdentifierType otherIdentifierTypeField;

        private string valueField;

        /// <remarks/>
        public OtherIdentifierType OtherIdentifierType
        {
            get
            {
                return this.otherIdentifierTypeField;
            }
            set
            {
                this.otherIdentifierTypeField = value;
            }
        }

        /// <remarks/>
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum OtherIdentifierType
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("13")]
        Item13,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class Worksite
    {

        private EffectiveAddress addressField;

        private string reportingUnitNumberField;

        private string worksiteIdentificationCodeField;

        private string tradeField;

        private string descriptionField;

        private bool isDefaultField;

        private bool isDefaultFieldSpecified;

        /// <remarks/>
        public EffectiveAddress Address
        {
            get
            {
                return this.addressField;
            }
            set
            {
                this.addressField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReportingUnitNumber
        {
            get
            {
                return this.reportingUnitNumberField;
            }
            set
            {
                this.reportingUnitNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string WorksiteIdentificationCode
        {
            get
            {
                return this.worksiteIdentificationCodeField;
            }
            set
            {
                this.worksiteIdentificationCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Trade
        {
            get
            {
                return this.tradeField;
            }
            set
            {
                this.tradeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsDefault
        {
            get
            {
                return this.isDefaultField;
            }
            set
            {
                this.isDefaultField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDefaultSpecified
        {
            get
            {
                return this.isDefaultFieldSpecified;
            }
            set
            {
                this.isDefaultFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class NAICS
    {

        private string codeField;

        private decimal rateField;

        private bool rateFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Rate
        {
            get
            {
                return this.rateField;
            }
            set
            {
                this.rateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RateSpecified
        {
            get
            {
                return this.rateFieldSpecified;
            }
            set
            {
                this.rateFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class RiskFactor
    {

        private string codeField;

        private decimal rateField;

        private bool rateFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Rate
        {
            get
            {
                return this.rateField;
            }
            set
            {
                this.rateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RateSpecified
        {
            get
            {
                return this.rateFieldSpecified;
            }
            set
            {
                this.rateFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class TaxSetup
    {

        private TaxSetupPayment paymentField;

        private Worksite[] worksiteField;

        private NAICS[] nAICSField;

        private RiskFactor[] riskFactorField;

        private TaxIdentifier[] taxIdentifierField;

        private System.DateTime asOfDateField;

        private bool asOfDateFieldSpecified;

        private string codeField;

        private TaxStatus statusField;

        private bool statusFieldSpecified;

        private string eINField;

        private string frequencyField;

        private decimal rateField;

        private bool rateFieldSpecified;

        //public static int count = 0;  

        //Trying ... for CA WH Payment Method verification ...

        //sequence should be used only in case of override ... otherwise, in normal cases, seq will be 0 by default.
        public static int sequence { get; set; }
        
        public bool TaxSetUpAdded()
        {   
            try
            {
                TaxSetup[] ts = new TaxSetup[] { new TaxSetup() };
                ts[0].Code = this.Code;
                ts[0].EIN = this.EIN;
                ts[0].Frequency = this.Frequency;
                ts[0].Status = this.Status;
                ts[0].Rate = this.Rate;
                ts[0].RateSpecified = true;
                ts[0].StatusSpecified = true;

                if (ICompanyImport.temp.Company[0].TaxSetup == null)
                    ICompanyImport.temp.Company[0].TaxSetup = new TaxSetup[10];

                //if (sequence == 0)       //In normal cases when no override ...
                //{
                //    ICompanyImport.temp.Company[0].TaxSetup[count] = ts[0];
                //    count++; 
                //}
                //else                //In case of override ...
                //{                    
                    ICompanyImport.temp.Company[0].TaxSetup[sequence] = ts[0];  
                    //count++;
                    
                //}           

                //return count.ToString();
                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                //return e.InnerException.ToString();
                return false;
            }
        }


        //Original (earlier) implementation ....
        //public bool TaxSetUpAdded()
        //{
        //    try
        //    {
        //        TaxSetup[] ts = new TaxSetup[] { new TaxSetup() };
        //        ts[0].Code = this.Code;
        //        ts[0].EIN = this.EIN;
        //        ts[0].Frequency = this.Frequency;
        //        ts[0].Status = this.Status;
        //        ts[0].Rate = this.Rate;
        //        ts[0].RateSpecified = true;
        //        ts[0].StatusSpecified = true;

        //        if (ICompanyImport.temp.Company[0].TaxSetup == null)
        //            ICompanyImport.temp.Company[0].TaxSetup = new TaxSetup[30];

        //        ICompanyImport.temp.Company[0].TaxSetup[count] = ts[0];
        //        count++;

        //        //return count.ToString();
        //        return true;
        //    }
        //    catch (Exception e)
        //    {
        //        e.GetType();
        //        //return e.InnerException.ToString();
        //        return false;
        //    }
        //}        

        /// <remarks/>
        public TaxSetupPayment Payment
        {
            get
            {
                return this.paymentField;
            }
            set
            {
                this.paymentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Worksite")]
        public Worksite[] Worksite
        {
            get
            {
                return this.worksiteField;
            }
            set
            {
                this.worksiteField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NAICS")]
        public NAICS[] NAICS
        {
            get
            {
                return this.nAICSField;
            }
            set
            {
                this.nAICSField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RiskFactor")]
        public RiskFactor[] RiskFactor
        {
            get
            {
                return this.riskFactorField;
            }
            set
            {
                this.riskFactorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TaxIdentifier")]
        public TaxIdentifier[] TaxIdentifier
        {
            get
            {
                return this.taxIdentifierField;
            }
            set
            {
                this.taxIdentifierField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime AsOfDate
        {
            get
            {
                return this.asOfDateField;
            }
            set
            {
                this.asOfDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AsOfDateSpecified
        {
            get
            {
                return this.asOfDateFieldSpecified;
            }
            set
            {
                this.asOfDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public TaxStatus Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified
        {
            get
            {
                return this.statusFieldSpecified;
            }
            set
            {
                this.statusFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EIN
        {
            get
            {
                return this.eINField;
            }
            set
            {
                this.eINField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Frequency
        {
            get
            {
                return this.frequencyField;
            }
            set
            {
                this.frequencyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Rate
        {
            get
            {
                return this.rateField;
            }
            set
            {
                this.rateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RateSpecified
        {
            get
            {
                return this.rateFieldSpecified;
            }
            set
            {
                this.rateFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public partial class TaxSetupPayment
    {
        private PaymentMethod methodField;

        private bool methodFieldSpecified;

        private PaymentStatus statusField;

        private bool statusFieldSpecified;

        private string passwordField;

        private string eFTPSPinField;

        //public static int c = 0;

        //new code .. 

        //"TaxSetup.sequence" should only be used in case of override ... In normal cases, "TaxSetup.sequence" will be zero by default.
                
        public bool TaxSetupPaymentAdded()
        {
            try
            {
                TaxSetupPayment tsp = new TaxSetupPayment();
                tsp.Method = this.Method;
                tsp.MethodSpecified = true;
                tsp.Status = this.Status;
                tsp.StatusSpecified = true;

                //New Code:
                if (ICompanyImport.temp.Company[0].TaxSetup[TaxSetup.sequence].Payment == null)
                    ICompanyImport.temp.Company[0].TaxSetup[TaxSetup.sequence].Payment = new TaxSetupPayment();

                ICompanyImport.temp.Company[0].TaxSetup[TaxSetup.sequence].Payment = tsp;

                ////In case of override ...
                //if (TaxSetup.sequence != 0)
                //{
                //    if (ICompanyImport.temp.Company[0].TaxSetup[TaxSetup.sequence].Payment == null)
                //        ICompanyImport.temp.Company[0].TaxSetup[TaxSetup.sequence].Payment = new TaxSetupPayment();
                //}
                ////In general case (no override) ...
                //else if (ICompanyImport.temp.Company[0].TaxSetup[c].Payment == null)
                //    ICompanyImport.temp.Company[0].TaxSetup[c].Payment = new TaxSetupPayment();

                //if (TaxSetup.sequence == 0)      //In general cases (no override) ..
                //{
                //    ICompanyImport.temp.Company[0].TaxSetup[c].Payment = tsp;
                //    c++;
                //    return true;
                //}
                //else                //In case of override ....
                //{                                       
                //    ICompanyImport.temp.Company[0].TaxSetup[TaxSetup.sequence].Payment = tsp;
                //    TaxSetup.sequence = 0;
                //    //ICompanyImport.temp.Company[0].TaxSetup[--c].Payment = tsp;
                //    //c++;
                //}
                return true;
                
            }
            catch (Exception e)
            {
                e.GetType();                
                return false;
            }
        }

        //Original ....
        //public bool TaxSetupPaymentAdded()
        //{
        //    try
        //    {
        //        TaxSetupPayment tsp = new TaxSetupPayment();

        //        tsp.Method = this.Method;
        //        tsp.MethodSpecified = true;
        //        tsp.Status = this.Status;
        //        tsp.StatusSpecified = true;

        //        if (ICompanyImport.temp.Company[0].TaxSetup[c].Payment == null)
        //            ICompanyImport.temp.Company[0].TaxSetup[c].Payment = new TaxSetupPayment();

        //        ICompanyImport.temp.Company[0].TaxSetup[c].Payment = tsp;
        //        c++;

        //        return true;
        //    }
        //    catch (Exception e)
        //    {
        //        e.GetType();
        //        return false;
        //    }
        //}


        //public bool TaxSetupPaymentAdded()
        //{
        //    try
        //    {
        //        TaxSetupPayment tsp = new TaxSetupPayment();

        //        tsp.Method = this.Method;
        //        tsp.MethodSpecified = true;
        //        tsp.Status = this.Status;
        //        tsp.StatusSpecified = true;

        //        ICompanyImport.temp.Company[0].TaxSetup[0].Payment = new TaxSetupPayment();
        //        ICompanyImport.temp.Company[0].TaxSetup[0].Payment = tsp;

        //        return true;
        //    }
        //    catch (Exception e)
        //    {
        //        e.GetType();
        //        return false;
        //    }
        //}


        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PaymentMethod Method
        {
            get
            {
                return this.methodField;
            }
            set
            {
                this.methodField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MethodSpecified
        {
            get
            {
                return this.methodFieldSpecified;
            }
            set
            {
                this.methodFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PaymentStatus Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified
        {
            get
            {
                return this.statusFieldSpecified;
            }
            set
            {
                this.statusFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EFTPSPin
        {
            get
            {
                return this.eFTPSPinField;
            }
            set
            {
                this.eFTPSPinField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum PaymentMethod
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum PaymentStatus
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum TaxStatus
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class EmployeeWorksite
    {

        private System.DateTime asOfDateField;

        private bool asOfDateFieldSpecified;

        private string taxCodeField;

        private string reportingUnitNumberField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime AsOfDate
        {
            get
            {
                return this.asOfDateField;
            }
            set
            {
                this.asOfDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AsOfDateSpecified
        {
            get
            {
                return this.asOfDateFieldSpecified;
            }
            set
            {
                this.asOfDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TaxCode
        {
            get
            {
                return this.taxCodeField;
            }
            set
            {
                this.taxCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReportingUnitNumber
        {
            get
            {
                return this.reportingUnitNumberField;
            }
            set
            {
                this.reportingUnitNumberField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class EmployeeProfile
    {

        private System.DateTime asOfDateField;

        private bool asOfDateFieldSpecified;

        private System.DateTime hireDateField;

        private bool hireDateFieldSpecified;

        private System.DateTime separationDateField;

        private bool separationDateFieldSpecified;

        private bool marriedField;

        private bool marriedFieldSpecified;

        private bool managerField;

        private bool managerFieldSpecified;

        private bool officerField;

        private bool officerFieldSpecified;

        private bool probationField;

        private bool probationFieldSpecified;

        private bool familyMemberField;

        private bool familyMemberFieldSpecified;

        private Gender genderField;

        private bool genderFieldSpecified;

        private string titleField;

        private PayType payTypeField;

        private bool payTypeFieldSpecified;

        private decimal payRateField;

        private bool payRateFieldSpecified;

        private bool statutoryField;

        private bool statutoryFieldSpecified;

        private bool thirdPartySickPayField;

        private bool thirdPartySickPayFieldSpecified;

        private bool retirementPlanField;

        private bool retirementPlanFieldSpecified;

        public static int c = 0;

        public bool EmployeeProfileAdded()
        {
            try
            {
                EmployeeProfile ep = new EmployeeProfile();

                ep.AsOfDate = this.AsOfDate;
                ep.AsOfDateSpecified = true;
                ep.Gender = this.Gender;
                ep.GenderSpecified = true;
                ep.PayType = this.PayType;
                ep.PayTypeSpecified = true;

                if (ICompanyImport.temp.Company[0].EmployeeSetup[c].EmployeeProfile == null)
                    ICompanyImport.temp.Company[0].EmployeeSetup[c].EmployeeProfile = new EmployeeProfile();

                ICompanyImport.temp.Company[0].EmployeeSetup[c].EmployeeProfile = ep;

                c++;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }


        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime AsOfDate
        {
            get
            {
                return this.asOfDateField;
            }
            set
            {
                this.asOfDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AsOfDateSpecified
        {
            get
            {
                return this.asOfDateFieldSpecified;
            }
            set
            {
                this.asOfDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime HireDate
        {
            get
            {
                return this.hireDateField;
            }
            set
            {
                this.hireDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HireDateSpecified
        {
            get
            {
                return this.hireDateFieldSpecified;
            }
            set
            {
                this.hireDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime SeparationDate
        {
            get
            {
                return this.separationDateField;
            }
            set
            {
                this.separationDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeparationDateSpecified
        {
            get
            {
                return this.separationDateFieldSpecified;
            }
            set
            {
                this.separationDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Married
        {
            get
            {
                return this.marriedField;
            }
            set
            {
                this.marriedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarriedSpecified
        {
            get
            {
                return this.marriedFieldSpecified;
            }
            set
            {
                this.marriedFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Manager
        {
            get
            {
                return this.managerField;
            }
            set
            {
                this.managerField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ManagerSpecified
        {
            get
            {
                return this.managerFieldSpecified;
            }
            set
            {
                this.managerFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Officer
        {
            get
            {
                return this.officerField;
            }
            set
            {
                this.officerField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OfficerSpecified
        {
            get
            {
                return this.officerFieldSpecified;
            }
            set
            {
                this.officerFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Probation
        {
            get
            {
                return this.probationField;
            }
            set
            {
                this.probationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbationSpecified
        {
            get
            {
                return this.probationFieldSpecified;
            }
            set
            {
                this.probationFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool FamilyMember
        {
            get
            {
                return this.familyMemberField;
            }
            set
            {
                this.familyMemberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FamilyMemberSpecified
        {
            get
            {
                return this.familyMemberFieldSpecified;
            }
            set
            {
                this.familyMemberFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public Gender Gender
        {
            get
            {
                return this.genderField;
            }
            set
            {
                this.genderField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GenderSpecified
        {
            get
            {
                return this.genderFieldSpecified;
            }
            set
            {
                this.genderFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                this.titleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PayType PayType
        {
            get
            {
                return this.payTypeField;
            }
            set
            {
                this.payTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PayTypeSpecified
        {
            get
            {
                return this.payTypeFieldSpecified;
            }
            set
            {
                this.payTypeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal PayRate
        {
            get
            {
                return this.payRateField;
            }
            set
            {
                this.payRateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PayRateSpecified
        {
            get
            {
                return this.payRateFieldSpecified;
            }
            set
            {
                this.payRateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Statutory
        {
            get
            {
                return this.statutoryField;
            }
            set
            {
                this.statutoryField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatutorySpecified
        {
            get
            {
                return this.statutoryFieldSpecified;
            }
            set
            {
                this.statutoryFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ThirdPartySickPay
        {
            get
            {
                return this.thirdPartySickPayField;
            }
            set
            {
                this.thirdPartySickPayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThirdPartySickPaySpecified
        {
            get
            {
                return this.thirdPartySickPayFieldSpecified;
            }
            set
            {
                this.thirdPartySickPayFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool RetirementPlan
        {
            get
            {
                return this.retirementPlanField;
            }
            set
            {
                this.retirementPlanField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RetirementPlanSpecified
        {
            get
            {
                return this.retirementPlanFieldSpecified;
            }
            set
            {
                this.retirementPlanFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum Gender
    {

        /// <remarks/>
        F,

        /// <remarks/>
        M,

        /// <remarks/>
        A,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum PayType
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class EmployeeName
    {

        private System.DateTime asOfDateField;

        private bool asOfDateFieldSpecified;

        private string firstField;

        private string lastField;

        private string middleField;

        private string suffixField;

        public static int c = 0;

        public bool EmployeeNameAdded()
        {
            try
            {
                EmployeeName en = new EmployeeName();

                en.AsOfDate = this.AsOfDate;
                en.AsOfDateSpecified = true;
                en.First = this.First;
                en.Last = this.Last;
                en.Middle = this.Middle;

                if (ICompanyImport.temp.Company[0].EmployeeSetup[c].EmployeeName == null)
                    ICompanyImport.temp.Company[0].EmployeeSetup[c].EmployeeName = new EmployeeName();

                ICompanyImport.temp.Company[0].EmployeeSetup[c].EmployeeName = en;

                c++;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }



        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime AsOfDate
        {
            get
            {
                return this.asOfDateField;
            }
            set
            {
                this.asOfDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AsOfDateSpecified
        {
            get
            {
                return this.asOfDateFieldSpecified;
            }
            set
            {
                this.asOfDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string First
        {
            get
            {
                return this.firstField;
            }
            set
            {
                this.firstField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Last
        {
            get
            {
                return this.lastField;
            }
            set
            {
                this.lastField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Middle
        {
            get
            {
                return this.middleField;
            }
            set
            {
                this.middleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Suffix
        {
            get
            {
                return this.suffixField;
            }
            set
            {
                this.suffixField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class StateSpecific
    {

        private CAWagePlanCode cAWagePlanCodeField;

        private bool cAWagePlanCodeFieldSpecified;

        private string lAOccupationalCodeField;

        private string aKOccupationalCodeField;

        private AKGeographicCode aKGeographicCodeField;

        private bool aKGeographicCodeFieldSpecified;

        private WYCoverageType wYCoverageTypeField;

        private bool wYCoverageTypeFieldSpecified;

        private string wYClassCodeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CAWagePlanCode CAWagePlanCode
        {
            get
            {
                return this.cAWagePlanCodeField;
            }
            set
            {
                this.cAWagePlanCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CAWagePlanCodeSpecified
        {
            get
            {
                return this.cAWagePlanCodeFieldSpecified;
            }
            set
            {
                this.cAWagePlanCodeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LAOccupationalCode
        {
            get
            {
                return this.lAOccupationalCodeField;
            }
            set
            {
                this.lAOccupationalCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AKOccupationalCode
        {
            get
            {
                return this.aKOccupationalCodeField;
            }
            set
            {
                this.aKOccupationalCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public AKGeographicCode AKGeographicCode
        {
            get
            {
                return this.aKGeographicCodeField;
            }
            set
            {
                this.aKGeographicCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AKGeographicCodeSpecified
        {
            get
            {
                return this.aKGeographicCodeFieldSpecified;
            }
            set
            {
                this.aKGeographicCodeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public WYCoverageType WYCoverageType
        {
            get
            {
                return this.wYCoverageTypeField;
            }
            set
            {
                this.wYCoverageTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WYCoverageTypeSpecified
        {
            get
            {
                return this.wYCoverageTypeFieldSpecified;
            }
            set
            {
                this.wYCoverageTypeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string WYClassCode
        {
            get
            {
                return this.wYClassCodeField;
            }
            set
            {
                this.wYClassCodeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum CAWagePlanCode
    {

        /// <remarks/>
        S,

        /// <remarks/>
        U,

        /// <remarks/>
        J,

        /// <remarks/>
        L,

        /// <remarks/>
        R,

        /// <remarks/>
        A,

        /// <remarks/>
        P,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum AKGeographicCode
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("31")]
        Item31,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("33")]
        Item33,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("34")]
        Item34,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("41")]
        Item41,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("44")]
        Item44,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("46")]
        Item46,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("47")]
        Item47,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("50")]
        Item50,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("51")]
        Item51,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("52")]
        Item52,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("55")]
        Item55,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("57")]
        Item57,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("58")]
        Item58,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("59")]
        Item59,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("61")]
        Item61,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("62")]
        Item62,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71")]
        Item71,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("73")]
        Item73,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("75")]
        Item75,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("79")]
        Item79,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("85")]
        Item85,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("86")]
        Item86,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("87")]
        Item87,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("88")]
        Item88,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("90")]
        Item90,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("95")]
        Item95,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("96")]
        Item96,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("97")]
        Item97,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("98")]
        Item98,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("99")]
        Item99,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("20")]
        Item20,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("00")]
        Item00,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum WYCoverageType
    {

        /// <remarks/>
        B,

        /// <remarks/>
        U,

        /// <remarks/>
        W,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class EmployeeSetup
    {

        private EmployeeName employeeNameField;

        private EffectiveAddress addressField;

        private EmployeeProfile employeeProfileField;

        private EmployeeWorksite[] employeeWorksiteField;

        private StateSpecific stateSpecificField;

        private System.DateTime asOfDateField;

        private bool asOfDateFieldSpecified;

        private string sSNField;

        private string employeeNumberField;

        private string payCycleCodeField;

        private string referenceNumberField;

        public static int count = 0;

        public bool EmployeeSetupAdded()
        {
            try
            {
                EmployeeSetup[] es = new EmployeeSetup[] { new EmployeeSetup() };

                es[0].AsOfDate = this.AsOfDate;
                es[0].SSN = this.SSN;
                es[0].PayCycleCode = this.PayCycleCode;
                es[0].ReferenceNumber = this.ReferenceNumber;
                es[0].EmployeeNumber = this.EmployeeNumber;

                if (ICompanyImport.temp.Company[0].EmployeeSetup == null)
                    ICompanyImport.temp.Company[0].EmployeeSetup = new EmployeeSetup[20];

                ICompanyImport.temp.Company[0].EmployeeSetup[count] = es[0];

                count++;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }

        //public bool EmployeeSetupAdded()
        //{
        //    try
        //    {
        //        EmployeeSetup[] es = new EmployeeSetup[]{new EmployeeSetup(), new EmployeeSetup()};

        //        es[count].AsOfDate = this.AsOfDate;
        //        es[count].SSN = this.SSN;
        //        es[count].PayCycleCode = this.PayCycleCode;
        //        es[count].ReferenceNumber = this.ReferenceNumber;
        //        es[count].EmployeeNumber = this.EmployeeNumber;

        //        if (ICompanyImport.temp.Company[0].EmployeeSetup == null)
        //            ICompanyImport.temp.Company[0].EmployeeSetup = new EmployeeSetup[] { new EmployeeSetup(), new EmployeeSetup() };

        //        ICompanyImport.temp.Company[0].EmployeeSetup[count] = es[count];

        //        count++;

        //        return true;
        //    }
        //    catch (Exception e)
        //    {
        //        e.GetType();
        //        return false;
        //    }
        //}


        /// <remarks/>
        public EmployeeName EmployeeName
        {
            get
            {
                return this.employeeNameField;
            }
            set
            {
                this.employeeNameField = value;
            }
        }

        /// <remarks/>
        public EffectiveAddress Address
        {
            get
            {
                return this.addressField;
            }
            set
            {
                this.addressField = value;
            }
        }

        /// <remarks/>
        public EmployeeProfile EmployeeProfile
        {
            get
            {
                return this.employeeProfileField;
            }
            set
            {
                this.employeeProfileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EmployeeWorksite")]
        public EmployeeWorksite[] EmployeeWorksite
        {
            get
            {
                return this.employeeWorksiteField;
            }
            set
            {
                this.employeeWorksiteField = value;
            }
        }

        /// <remarks/>
        public StateSpecific StateSpecific
        {
            get
            {
                return this.stateSpecificField;
            }
            set
            {
                this.stateSpecificField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime AsOfDate
        {
            get
            {
                return this.asOfDateField;
            }
            set
            {
                this.asOfDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AsOfDateSpecified
        {
            get
            {
                return this.asOfDateFieldSpecified;
            }
            set
            {
                this.asOfDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SSN
        {
            get
            {
                return this.sSNField;
            }
            set
            {
                this.sSNField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EmployeeNumber
        {
            get
            {
                return this.employeeNumberField;
            }
            set
            {
                this.employeeNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PayCycleCode
        {
            get
            {
                return this.payCycleCodeField;
            }
            set
            {
                this.payCycleCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string ReferenceNumber
        {
            get
            {
                return this.referenceNumberField;
            }
            set
            {
                this.referenceNumberField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class YTD
    {

        private decimal taxField;

        private decimal taxableField;

        private decimal grossField;

        public static int c = 0;
        private int counter = 0;
        private int freqTaxDetail = TaxDetail.Frequency - 1;

        public bool YTDAdded()
        {

            if(c>0 && counter==0)
            {                
                c = 0;                
            }

            try
            {
                YTD y = new YTD();

                y.Tax = this.Tax;
                y.Taxable = this.Taxable;
                y.Gross = this.Gross;

                if (ICompanyImport.temp.Company[0].TaxDetail[freqTaxDetail].EmployeeDetail[c].YTD == null)
                    ICompanyImport.temp.Company[0].TaxDetail[freqTaxDetail].EmployeeDetail[c].YTD = new YTD();

                ICompanyImport.temp.Company[0].TaxDetail[freqTaxDetail].EmployeeDetail[c].YTD = y;

                c++;
                counter++;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }


        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Tax
        {
            get
            {
                return this.taxField;
            }
            set
            {
                this.taxField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Taxable
        {
            get
            {
                return this.taxableField;
            }
            set
            {
                this.taxableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Gross
        {
            get
            {
                return this.grossField;
            }
            set
            {
                this.grossField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class QTD
    {

        private System.DateTime asOfDateField;

        private bool asOfDateFieldSpecified;

        private decimal taxField;

        private decimal taxableField;

        private decimal grossField;

        private string hoursField;

        private string weeksField;

        private bool month1_12Field;

        private bool month1_12FieldSpecified;

        private bool month2_12Field;

        private bool month2_12FieldSpecified;

        private bool month3_12Field;

        private bool month3_12FieldSpecified;

        private decimal tipsField;

        private bool tipsFieldSpecified;

        private decimal officerWagesField;

        private bool officerWagesFieldSpecified;

        private decimal exemptOfficerWagesField;

        private bool exemptOfficerWagesFieldSpecified;

        private decimal outofStateYTDGrossWagesField;

        private bool outofStateYTDGrossWagesFieldSpecified;

        private decimal outofStateYTDTaxableWagesField;

        private bool outofStateYTDTaxableWagesFieldSpecified;

        public static int c = 0;
        private int counter = 0;

        private int freqTaxDetail = TaxDetail.Frequency - 1;

        public bool QTDAdded()
        {
            if(c>0 && counter==0)
            {
                c = 0;
            }


            try
            {
                QTD q = new QTD();

                q.Tax = this.Tax;
                q.Taxable = this.Taxable;
                q.Gross = this.Gross;
                q.Hours = this.Hours;
                q.Weeks = this.Weeks;
                q.Month1_12 = this.Month1_12;
                q.Month1_12Specified = true;
                q.Month2_12 = this.Month2_12;
                q.Month2_12Specified = true;
                q.Month3_12 = this.Month3_12;
                q.Month3_12Specified = true;

                if (ICompanyImport.temp.Company[0].TaxDetail[freqTaxDetail].EmployeeDetail[c].QTD == null)
                    ICompanyImport.temp.Company[0].TaxDetail[freqTaxDetail].EmployeeDetail[c].QTD = new QTD();

                ICompanyImport.temp.Company[0].TaxDetail[freqTaxDetail].EmployeeDetail[c].QTD = q;

                c++;
                counter++;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }


        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime AsOfDate
        {
            get
            {
                return this.asOfDateField;
            }
            set
            {
                this.asOfDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AsOfDateSpecified
        {
            get
            {
                return this.asOfDateFieldSpecified;
            }
            set
            {
                this.asOfDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Tax
        {
            get
            {
                return this.taxField;
            }
            set
            {
                this.taxField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Taxable
        {
            get
            {
                return this.taxableField;
            }
            set
            {
                this.taxableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Gross
        {
            get
            {
                return this.grossField;
            }
            set
            {
                this.grossField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string Hours
        {
            get
            {
                return this.hoursField;
            }
            set
            {
                this.hoursField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string Weeks
        {
            get
            {
                return this.weeksField;
            }
            set
            {
                this.weeksField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Month1_12
        {
            get
            {
                return this.month1_12Field;
            }
            set
            {
                this.month1_12Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Month1_12Specified
        {
            get
            {
                return this.month1_12FieldSpecified;
            }
            set
            {
                this.month1_12FieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Month2_12
        {
            get
            {
                return this.month2_12Field;
            }
            set
            {
                this.month2_12Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Month2_12Specified
        {
            get
            {
                return this.month2_12FieldSpecified;
            }
            set
            {
                this.month2_12FieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Month3_12
        {
            get
            {
                return this.month3_12Field;
            }
            set
            {
                this.month3_12Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Month3_12Specified
        {
            get
            {
                return this.month3_12FieldSpecified;
            }
            set
            {
                this.month3_12FieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Tips
        {
            get
            {
                return this.tipsField;
            }
            set
            {
                this.tipsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TipsSpecified
        {
            get
            {
                return this.tipsFieldSpecified;
            }
            set
            {
                this.tipsFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal OfficerWages
        {
            get
            {
                return this.officerWagesField;
            }
            set
            {
                this.officerWagesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OfficerWagesSpecified
        {
            get
            {
                return this.officerWagesFieldSpecified;
            }
            set
            {
                this.officerWagesFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal ExemptOfficerWages
        {
            get
            {
                return this.exemptOfficerWagesField;
            }
            set
            {
                this.exemptOfficerWagesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExemptOfficerWagesSpecified
        {
            get
            {
                return this.exemptOfficerWagesFieldSpecified;
            }
            set
            {
                this.exemptOfficerWagesFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal OutofStateYTDGrossWages
        {
            get
            {
                return this.outofStateYTDGrossWagesField;
            }
            set
            {
                this.outofStateYTDGrossWagesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutofStateYTDGrossWagesSpecified
        {
            get
            {
                return this.outofStateYTDGrossWagesFieldSpecified;
            }
            set
            {
                this.outofStateYTDGrossWagesFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal OutofStateYTDTaxableWages
        {
            get
            {
                return this.outofStateYTDTaxableWagesField;
            }
            set
            {
                this.outofStateYTDTaxableWagesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutofStateYTDTaxableWagesSpecified
        {
            get
            {
                return this.outofStateYTDTaxableWagesFieldSpecified;
            }
            set
            {
                this.outofStateYTDTaxableWagesFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class Daily
    {

        private System.DateTime periodStartDateField;

        private System.DateTime periodEndDateField;

        private decimal taxField;

        private decimal taxableField;

        private decimal grossField;

        private string hoursField;

        private string weeksField;

        public static int c = 0;
        private int counter;

        private int freqTaxDetail = TaxDetail.Frequency - 1;

        public bool DailyAdded()
        {

            if(c>0 && counter==0)
            {
                c = 0;
            }

            try
            {
                Daily d = new Daily();

                d.PeriodStartDate = this.PeriodStartDate;
                d.PeriodEndDate = this.PeriodEndDate;
                d.Tax = this.Tax;
                d.Taxable = this.Taxable;
                d.Gross = this.Gross;
                d.Hours = this.Hours;
                d.Weeks = this.Weeks;

                if (ICompanyImport.temp.Company[0].TaxDetail[freqTaxDetail].EmployeeDetail[c].Daily == null)
                    ICompanyImport.temp.Company[0].TaxDetail[freqTaxDetail].EmployeeDetail[c].Daily = new Daily();

                ICompanyImport.temp.Company[0].TaxDetail[freqTaxDetail].EmployeeDetail[c].Daily = d;

                c++;
                counter++;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }


        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime PeriodStartDate
        {
            get
            {
                return this.periodStartDateField;
            }
            set
            {
                this.periodStartDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime PeriodEndDate
        {
            get
            {
                return this.periodEndDateField;
            }
            set
            {
                this.periodEndDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Tax
        {
            get
            {
                return this.taxField;
            }
            set
            {
                this.taxField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Taxable
        {
            get
            {
                return this.taxableField;
            }
            set
            {
                this.taxableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Gross
        {
            get
            {
                return this.grossField;
            }
            set
            {
                this.grossField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string Hours
        {
            get
            {
                return this.hoursField;
            }
            set
            {
                this.hoursField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string Weeks
        {
            get
            {
                return this.weeksField;
            }
            set
            {
                this.weeksField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class EmployeeSummary
    {

        private System.DateTime periodStartDateField;

        private System.DateTime periodEndDateField;

        private decimal taxField;

        private decimal taxableField;

        private decimal grossField;

        private string hoursField;

        private string weeksField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime PeriodStartDate
        {
            get
            {
                return this.periodStartDateField;
            }
            set
            {
                this.periodStartDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime PeriodEndDate
        {
            get
            {
                return this.periodEndDateField;
            }
            set
            {
                this.periodEndDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Tax
        {
            get
            {
                return this.taxField;
            }
            set
            {
                this.taxField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Taxable
        {
            get
            {
                return this.taxableField;
            }
            set
            {
                this.taxableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Gross
        {
            get
            {
                return this.grossField;
            }
            set
            {
                this.grossField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string Hours
        {
            get
            {
                return this.hoursField;
            }
            set
            {
                this.hoursField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string Weeks
        {
            get
            {
                return this.weeksField;
            }
            set
            {
                this.weeksField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class TaxDetail
    {

        private TaxDetailEmployeeDetail[] employeeDetailField;

        private EmployeeSummary employeeSummaryField;

        private System.DateTime checkDateField;

        private bool checkDateFieldSpecified;

        private bool isPaidField;

        private string payCycleCodeField;

        private string taxCodeField;

        private bool residentField;

        private string sourceSystemIdField;

        private string customField1Field;

        private string customField2Field;

        private string customField3Field;

        private string customField4Field;

        private string customField5Field;

        private string customField6Field;

        private string customField7Field;

        private string customField8Field;

        public static int Frequency = 0;
       // private int counter = 0;

       // private int sequence;        

        public bool TaxDetailAdded()
        {
            try
            {
                //if(Frequency>0 && counter==0)
                //{
                //    Frequency = 0;
                //}
                TaxDetail td = new TaxDetail();
             //   Frequency = this.sequence;
                //td.Frequency = this.Frequency;  
                td.CheckDate = this.CheckDate;
                td.CheckDateSpecified = true;
                td.PayCycleCode = this.PayCycleCode;
                td.TaxCode = this.TaxCode;
                td.IsPaid = this.IsPaid;
                td.Resident = this.Resident;
                //New fields for Cash Collection scenarios .....
                td.CustomField1 = this.CustomField1;
                td.CustomField2 = this.CustomField2;

                if (ICompanyImport.temp.Company[0].TaxDetail == null)
                    ICompanyImport.temp.Company[0].TaxDetail = new TaxDetail[20];   //10

                ICompanyImport.temp.Company[0].TaxDetail[Frequency] = td;

                Frequency++;
                //counter++;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EmployeeDetail")]
        public TaxDetailEmployeeDetail[] EmployeeDetail
        {
            get
            {
                return this.employeeDetailField;
            }
            set
            {
                this.employeeDetailField = value;
            }
        }

        /// <remarks/>
        public EmployeeSummary EmployeeSummary
        {
            get
            {
                return this.employeeSummaryField;
            }
            set
            {
                this.employeeSummaryField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime CheckDate
        {
            get
            {
                return this.checkDateField;
            }
            set
            {
                this.checkDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CheckDateSpecified
        {
            get
            {
                return this.checkDateFieldSpecified;
            }
            set
            {
                this.checkDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsPaid
        {
            get
            {
                return this.isPaidField;
            }
            set
            {
                this.isPaidField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PayCycleCode
        {
            get
            {
                return this.payCycleCodeField;
            }
            set
            {
                this.payCycleCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TaxCode
        {
            get
            {
                return this.taxCodeField;
            }
            set
            {
                this.taxCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Resident
        {
            get
            {
                return this.residentField;
            }
            set
            {
                this.residentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SourceSystemId
        {
            get
            {
                return this.sourceSystemIdField;
            }
            set
            {
                this.sourceSystemIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomField1
        {
            get
            {
                return this.customField1Field;
            }
            set
            {
                this.customField1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomField2
        {
            get
            {
                return this.customField2Field;
            }
            set
            {
                this.customField2Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomField3
        {
            get
            {
                return this.customField3Field;
            }
            set
            {
                this.customField3Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomField4
        {
            get
            {
                return this.customField4Field;
            }
            set
            {
                this.customField4Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomField5
        {
            get
            {
                return this.customField5Field;
            }
            set
            {
                this.customField5Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomField6
        {
            get
            {
                return this.customField6Field;
            }
            set
            {
                this.customField6Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomField7
        {
            get
            {
                return this.customField7Field;
            }
            set
            {
                this.customField7Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomField8
        {
            get
            {
                return this.customField8Field;
            }
            set
            {
                this.customField8Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public partial class TaxDetailEmployeeDetail
    {
        private Daily dailyField;

        private QTD qTDField;

        private YTD yTDField;

        private string sSNField;

        private string employeeNumberField;

        public static int count = 0;
        private int counter = 0;

        //variable freqTaxDetail ensures employees should be added in corresponding TaxDetail node ...
        private int freqTaxDetail = TaxDetail.Frequency - 1;

        public bool TaxDetailEmployeeDetailAdded()
        {
            try
            {
                if(count>0 && counter==0)
                {
                    count = 0;
                }

                TaxDetailEmployeeDetail[] tded = new TaxDetailEmployeeDetail[] { new TaxDetailEmployeeDetail() };

                tded[0].SSN = this.SSN;
                tded[0].EmployeeNumber = this.EmployeeNumber;

                if (ICompanyImport.temp.Company[0].TaxDetail[freqTaxDetail].EmployeeDetail == null)
                    ICompanyImport.temp.Company[0].TaxDetail[freqTaxDetail].EmployeeDetail = new TaxDetailEmployeeDetail[20];

                ICompanyImport.temp.Company[0].TaxDetail[freqTaxDetail].EmployeeDetail[count] = tded[0];

                count++;
                counter++;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }


        /// <remarks/>
        public Daily Daily
        {
            get
            {
                return this.dailyField;
            }
            set
            {
                this.dailyField = value;
            }
        }

        /// <remarks/>
        public QTD QTD
        {
            get
            {
                return this.qTDField;
            }
            set
            {
                this.qTDField = value;
            }
        }

        /// <remarks/>
        public YTD YTD
        {
            get
            {
                return this.yTDField;
            }
            set
            {
                this.yTDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SSN
        {
            get
            {
                return this.sSNField;
            }
            set
            {
                this.sSNField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EmployeeNumber
        {
            get
            {
                return this.employeeNumberField;
            }
            set
            {
                this.employeeNumberField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class WithholdingOrderSetup
    {

        private string courtNameField;

        private string countyNameField;

        private PaymentMethod methodField;

        private bool methodFieldSpecified;

        private System.DateTime startDateField;

        private bool startDateFieldSpecified;

        private System.DateTime endDateField;

        private bool endDateFieldSpecified;

        private decimal expectedWhAmountField;

        private bool expectedWhAmountFieldSpecified;

        private decimal expectedFeeField;

        private bool expectedFeeFieldSpecified;

        private decimal inArrearsAmountField;

        private bool inArrearsAmountFieldSpecified;

        private DueDateType dueDateTypeField;

        private bool dueDateTypeFieldSpecified;

        private string checkDatePlusDaysField;

        private string dayField;

        private decimal thresholdAmountField;

        private bool thresholdAmountFieldSpecified;

        private decimal goalAmountField;

        private bool goalAmountFieldSpecified;

        private bool dependentsField;

        private bool dependentsFieldSpecified;

        private TaxFilingStatus taxFilingStatusField;

        private bool taxFilingStatusFieldSpecified;

        private string otherOrderIdField;

        private string deductionCodeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CourtName
        {
            get
            {
                return this.courtNameField;
            }
            set
            {
                this.courtNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CountyName
        {
            get
            {
                return this.countyNameField;
            }
            set
            {
                this.countyNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PaymentMethod Method
        {
            get
            {
                return this.methodField;
            }
            set
            {
                this.methodField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MethodSpecified
        {
            get
            {
                return this.methodFieldSpecified;
            }
            set
            {
                this.methodFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime StartDate
        {
            get
            {
                return this.startDateField;
            }
            set
            {
                this.startDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified
        {
            get
            {
                return this.startDateFieldSpecified;
            }
            set
            {
                this.startDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime EndDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                this.endDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified
        {
            get
            {
                return this.endDateFieldSpecified;
            }
            set
            {
                this.endDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal ExpectedWhAmount
        {
            get
            {
                return this.expectedWhAmountField;
            }
            set
            {
                this.expectedWhAmountField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpectedWhAmountSpecified
        {
            get
            {
                return this.expectedWhAmountFieldSpecified;
            }
            set
            {
                this.expectedWhAmountFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal ExpectedFee
        {
            get
            {
                return this.expectedFeeField;
            }
            set
            {
                this.expectedFeeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpectedFeeSpecified
        {
            get
            {
                return this.expectedFeeFieldSpecified;
            }
            set
            {
                this.expectedFeeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal InArrearsAmount
        {
            get
            {
                return this.inArrearsAmountField;
            }
            set
            {
                this.inArrearsAmountField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InArrearsAmountSpecified
        {
            get
            {
                return this.inArrearsAmountFieldSpecified;
            }
            set
            {
                this.inArrearsAmountFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DueDateType DueDateType
        {
            get
            {
                return this.dueDateTypeField;
            }
            set
            {
                this.dueDateTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DueDateTypeSpecified
        {
            get
            {
                return this.dueDateTypeFieldSpecified;
            }
            set
            {
                this.dueDateTypeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string CheckDatePlusDays
        {
            get
            {
                return this.checkDatePlusDaysField;
            }
            set
            {
                this.checkDatePlusDaysField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string Day
        {
            get
            {
                return this.dayField;
            }
            set
            {
                this.dayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal ThresholdAmount
        {
            get
            {
                return this.thresholdAmountField;
            }
            set
            {
                this.thresholdAmountField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThresholdAmountSpecified
        {
            get
            {
                return this.thresholdAmountFieldSpecified;
            }
            set
            {
                this.thresholdAmountFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal GoalAmount
        {
            get
            {
                return this.goalAmountField;
            }
            set
            {
                this.goalAmountField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoalAmountSpecified
        {
            get
            {
                return this.goalAmountFieldSpecified;
            }
            set
            {
                this.goalAmountFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Dependents
        {
            get
            {
                return this.dependentsField;
            }
            set
            {
                this.dependentsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DependentsSpecified
        {
            get
            {
                return this.dependentsFieldSpecified;
            }
            set
            {
                this.dependentsFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public TaxFilingStatus TaxFilingStatus
        {
            get
            {
                return this.taxFilingStatusField;
            }
            set
            {
                this.taxFilingStatusField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxFilingStatusSpecified
        {
            get
            {
                return this.taxFilingStatusFieldSpecified;
            }
            set
            {
                this.taxFilingStatusFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OtherOrderId
        {
            get
            {
                return this.otherOrderIdField;
            }
            set
            {
                this.otherOrderIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DeductionCode
        {
            get
            {
                return this.deductionCodeField;
            }
            set
            {
                this.deductionCodeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum DueDateType
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum TaxFilingStatus
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item31,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class WithholdingOrderDetail
    {

        private System.DateTime checkDateField;

        private System.DateTime periodStartDateField;

        private bool periodStartDateFieldSpecified;

        private System.DateTime periodEndDateField;

        private bool periodEndDateFieldSpecified;

        private decimal grossWagesField;

        private bool grossWagesFieldSpecified;

        private decimal taxWithhledField;

        private bool taxWithhledFieldSpecified;

        private decimal amountField;

        private bool amountFieldSpecified;

        private decimal feeField;

        private bool feeFieldSpecified;

        private CheckType checkTypeField;

        private bool checkTypeFieldSpecified;

        private bool medicalSupportIndicatorField;

        private bool medicalSupportIndicatorFieldSpecified;

        private bool employmentTerminationIndicatorField;

        private bool employmentTerminationIndicatorFieldSpecified;

        private string sourceSystemIdField;

        private PaymentMethod paymentMethodField;

        private bool paymentMethodFieldSpecified;

        private string customField1Field;

        private string customField2Field;

        private string customField3Field;

        private string customField4Field;

        private string customField5Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime CheckDate
        {
            get
            {
                return this.checkDateField;
            }
            set
            {
                this.checkDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime PeriodStartDate
        {
            get
            {
                return this.periodStartDateField;
            }
            set
            {
                this.periodStartDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodStartDateSpecified
        {
            get
            {
                return this.periodStartDateFieldSpecified;
            }
            set
            {
                this.periodStartDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime PeriodEndDate
        {
            get
            {
                return this.periodEndDateField;
            }
            set
            {
                this.periodEndDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodEndDateSpecified
        {
            get
            {
                return this.periodEndDateFieldSpecified;
            }
            set
            {
                this.periodEndDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal GrossWages
        {
            get
            {
                return this.grossWagesField;
            }
            set
            {
                this.grossWagesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrossWagesSpecified
        {
            get
            {
                return this.grossWagesFieldSpecified;
            }
            set
            {
                this.grossWagesFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TaxWithhled
        {
            get
            {
                return this.taxWithhledField;
            }
            set
            {
                this.taxWithhledField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxWithhledSpecified
        {
            get
            {
                return this.taxWithhledFieldSpecified;
            }
            set
            {
                this.taxWithhledFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Amount
        {
            get
            {
                return this.amountField;
            }
            set
            {
                this.amountField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified
        {
            get
            {
                return this.amountFieldSpecified;
            }
            set
            {
                this.amountFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Fee
        {
            get
            {
                return this.feeField;
            }
            set
            {
                this.feeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FeeSpecified
        {
            get
            {
                return this.feeFieldSpecified;
            }
            set
            {
                this.feeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CheckType CheckType
        {
            get
            {
                return this.checkTypeField;
            }
            set
            {
                this.checkTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CheckTypeSpecified
        {
            get
            {
                return this.checkTypeFieldSpecified;
            }
            set
            {
                this.checkTypeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool MedicalSupportIndicator
        {
            get
            {
                return this.medicalSupportIndicatorField;
            }
            set
            {
                this.medicalSupportIndicatorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MedicalSupportIndicatorSpecified
        {
            get
            {
                return this.medicalSupportIndicatorFieldSpecified;
            }
            set
            {
                this.medicalSupportIndicatorFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool EmploymentTerminationIndicator
        {
            get
            {
                return this.employmentTerminationIndicatorField;
            }
            set
            {
                this.employmentTerminationIndicatorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmploymentTerminationIndicatorSpecified
        {
            get
            {
                return this.employmentTerminationIndicatorFieldSpecified;
            }
            set
            {
                this.employmentTerminationIndicatorFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SourceSystemId
        {
            get
            {
                return this.sourceSystemIdField;
            }
            set
            {
                this.sourceSystemIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PaymentMethod PaymentMethod
        {
            get
            {
                return this.paymentMethodField;
            }
            set
            {
                this.paymentMethodField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentMethodSpecified
        {
            get
            {
                return this.paymentMethodFieldSpecified;
            }
            set
            {
                this.paymentMethodFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomField1
        {
            get
            {
                return this.customField1Field;
            }
            set
            {
                this.customField1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomField2
        {
            get
            {
                return this.customField2Field;
            }
            set
            {
                this.customField2Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomField3
        {
            get
            {
                return this.customField3Field;
            }
            set
            {
                this.customField3Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomField4
        {
            get
            {
                return this.customField4Field;
            }
            set
            {
                this.customField4Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomField5
        {
            get
            {
                return this.customField5Field;
            }
            set
            {
                this.customField5Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum CheckType
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class WithholdingOrderBenificiary
    {

        private string lastNameField;

        private string firstNameField;

        private string middleNameField;

        private string sSNField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LastName
        {
            get
            {
                return this.lastNameField;
            }
            set
            {
                this.lastNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FirstName
        {
            get
            {
                return this.firstNameField;
            }
            set
            {
                this.firstNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MiddleName
        {
            get
            {
                return this.middleNameField;
            }
            set
            {
                this.middleNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SSN
        {
            get
            {
                return this.sSNField;
            }
            set
            {
                this.sSNField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class WithholdingOrderAchPayeeInfo
    {

        private string nameField;

        private string routingNumberField;

        private string accountNumberField;

        private string fIPSCodeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RoutingNumber
        {
            get
            {
                return this.routingNumberField;
            }
            set
            {
                this.routingNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AccountNumber
        {
            get
            {
                return this.accountNumberField;
            }
            set
            {
                this.accountNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FIPSCode
        {
            get
            {
                return this.fIPSCodeField;
            }
            set
            {
                this.fIPSCodeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]
    public partial class WithholdingOrder
    {

        private WithholdingOrderSetup withholdingOrderSetupField;

        private EffectiveAddress payeeField;

        private WithholdingOrderAchPayeeInfo withholdingOrderAchPayeeInfoField;

        private WithholdingOrderDetail withholdingOrderDetailField;

        private WithholdingOrderBenificiary withholdingOrderBenificiaryField;

        private string sSNField;

        private string employeeNumberField;

        private string payCycleCodeField;

        private string orderIdField;

        private USAStateAbbreviation stateField;

        private string referenceNumberField;

        private string payeeNameField;

        private WithholdingOrderType withholdingOrderTypeField;

        private bool withholdingOrderTypeFieldSpecified;

        /// <remarks/>
        public WithholdingOrderSetup WithholdingOrderSetup
        {
            get
            {
                return this.withholdingOrderSetupField;
            }
            set
            {
                this.withholdingOrderSetupField = value;
            }
        }

        /// <remarks/>
        public EffectiveAddress Payee
        {
            get
            {
                return this.payeeField;
            }
            set
            {
                this.payeeField = value;
            }
        }

        /// <remarks/>
        public WithholdingOrderAchPayeeInfo WithholdingOrderAchPayeeInfo
        {
            get
            {
                return this.withholdingOrderAchPayeeInfoField;
            }
            set
            {
                this.withholdingOrderAchPayeeInfoField = value;
            }
        }

        /// <remarks/>
        public WithholdingOrderDetail WithholdingOrderDetail
        {
            get
            {
                return this.withholdingOrderDetailField;
            }
            set
            {
                this.withholdingOrderDetailField = value;
            }
        }

        /// <remarks/>
        public WithholdingOrderBenificiary WithholdingOrderBenificiary
        {
            get
            {
                return this.withholdingOrderBenificiaryField;
            }
            set
            {
                this.withholdingOrderBenificiaryField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SSN
        {
            get
            {
                return this.sSNField;
            }
            set
            {
                this.sSNField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EmployeeNumber
        {
            get
            {
                return this.employeeNumberField;
            }
            set
            {
                this.employeeNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PayCycleCode
        {
            get
            {
                return this.payCycleCodeField;
            }
            set
            {
                this.payCycleCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OrderId
        {
            get
            {
                return this.orderIdField;
            }
            set
            {
                this.orderIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public USAStateAbbreviation State
        {
            get
            {
                return this.stateField;
            }
            set
            {
                this.stateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string ReferenceNumber
        {
            get
            {
                return this.referenceNumberField;
            }
            set
            {
                this.referenceNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PayeeName
        {
            get
            {
                return this.payeeNameField;
            }
            set
            {
                this.payeeNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public WithholdingOrderType WithholdingOrderType
        {
            get
            {
                return this.withholdingOrderTypeField;
            }
            set
            {
                this.withholdingOrderTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WithholdingOrderTypeSpecified
        {
            get
            {
                return this.withholdingOrderTypeFieldSpecified;
            }
            set
            {
                this.withholdingOrderTypeFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum USAStateAbbreviation
    {

        /// <remarks/>
        AL,

        /// <remarks/>
        AK,

        /// <remarks/>
        AZ,

        /// <remarks/>
        AR,

        /// <remarks/>
        CA,

        /// <remarks/>
        CO,

        /// <remarks/>
        CT,

        /// <remarks/>
        DE,

        /// <remarks/>
        DC,

        /// <remarks/>
        FE,

        /// <remarks/>
        FL,

        /// <remarks/>
        GA,

        /// <remarks/>
        HI,

        /// <remarks/>
        ID,

        /// <remarks/>
        IL,

        /// <remarks/>
        IN,

        /// <remarks/>
        IA,

        /// <remarks/>
        KS,

        /// <remarks/>
        KY,

        /// <remarks/>
        LA,

        /// <remarks/>
        ME,

        /// <remarks/>
        MD,

        /// <remarks/>
        MA,

        /// <remarks/>
        MI,

        /// <remarks/>
        MN,

        /// <remarks/>
        MO,

        /// <remarks/>
        MT,

        /// <remarks/>
        NE,

        /// <remarks/>
        NV,

        /// <remarks/>
        NH,

        /// <remarks/>
        NJ,

        /// <remarks/>
        NM,

        /// <remarks/>
        NY,

        /// <remarks/>
        NC,

        /// <remarks/>
        ND,

        /// <remarks/>
        OH,

        /// <remarks/>
        OK,

        /// <remarks/>
        OR,

        /// <remarks/>
        RI,

        /// <remarks/>
        SC,

        /// <remarks/>
        SD,

        /// <remarks/>
        TN,

        /// <remarks/>
        TX,

        /// <remarks/>
        UT,

        /// <remarks/>
        VT,

        /// <remarks/>
        VA,

        /// <remarks/>
        WA,

        /// <remarks/>
        WV,

        /// <remarks/>
        WI,

        /// <remarks/>
        WY,

        /// <remarks/>
        GU,

        /// <remarks/>
        AS,

        /// <remarks/>
        PR,

        /// <remarks/>
        VI,

        /// <remarks/>
        PW,

        /// <remarks/>
        FM,

        /// <remarks/>
        MH,

        /// <remarks/>
        MP,

        /// <remarks/>
        PA,

        /// <remarks/>
        MS,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum WithholdingOrderType
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd", IsNullable = false)]    
    public partial class CompanyImport
    {

        private CompanyImportCompany[] companyField;

        private System.DateTime payrollProcessDateField;

        private bool payrollProcessDateFieldSpecified;

        private string sourceSystemIdField;
             
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Company")]
        public CompanyImportCompany[] Company
        {
            get
            {
                return this.companyField;
            }
            set
            {
                this.companyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime PayrollProcessDate
        {
            get
            {
                return this.payrollProcessDateField;
            }
            set
            {
                this.payrollProcessDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PayrollProcessDateSpecified
        {
            get
            {
                return this.payrollProcessDateFieldSpecified;
            }
            set
            {
                this.payrollProcessDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SourceSystemId
        {
            get
            {
                return this.sourceSystemIdField;
            }
            set
            {
                this.sourceSystemIdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public partial class CompanyImportCompany
    {     //changed daily detail, QTD detail, YTD Detail from bool to int ...

        private Address addressField;

        private EffectiveStatus statusField;

        private ServiceType serviceTypeField;

        private Reporting reportingField;

        private Category categoryField;

        private Contact contactField;

        private PayCycle[] payCycleField;

        private TaxSetup[] taxSetupField;

        private EmployeeSetup[] employeeSetupField;

        private TaxDetail[] taxDetailField;

        private WithholdingOrder[] withholdingOrderField;

        private System.DateTime taxExStartDateField;

        private bool taxExStartDateFieldSpecified;

        private System.DateTime asOfDateField;

        private bool asOfDateFieldSpecified;

        private string nameField;

        private string codeField;

        private string defaultPayCycleField;

        private string dBANameField;

        private string payrollSoftwareNameField;

        private string referenceNumberField;

        private CompanyImportAndBalance importAndBalanceFlagField;

        private bool importAndBalanceFlagFieldSpecified;

        private int importDailyDetailField;     //changed from bool to int

        private int importQTDDetailField;      //changed from bool to int

        private int importYTDDetailField;      //changed from bool to int


        public static string companyName;
        public static string companyCode;        

        //default value true for all the tests ....Always true
        public static bool flag1 = true;

        //For Fed Follower tests where company name needs to be same for everytime xml is generated.
        public static string Unique = "Yes";  

        
        //Method to be called by each fitnesse table ....
        public bool AddDataInTemp()
        {

            try
            {
                CompanyImportCompany cic = new CompanyImportCompany();

                cic.AsOfDate = this.AsOfDate;
                cic.AsOfDateSpecified = true;                

                if (flag1)
                {
                    int randNum = GenerateRandom(10, 99999999);
                    companyName = this.Name + randNum;     //Random Company Name generated ..
                    companyCode = this.Code + randNum;     //Random Company Code generated ..
                    cic.Name = companyName;
                    cic.Code = companyCode;
                                     
                    Console.WriteLine("Company Name : " + cic.Name);
                    Console.WriteLine("Company Code : " + cic.Code);
                    //for Fed Follower Tests, where same company name is required everytime ..
                    if (string.Equals(Unique,"No", StringComparison.OrdinalIgnoreCase))
                        flag1 = false;                    
                }
                else
                {
                    cic.Name = companyName;
                    cic.Code = companyCode;
                    Console.WriteLine("Comany Name : " + cic.Name);
                    Console.WriteLine("Comany Code : " + cic.Code);
                }
                
                //companyName = this.Name + randNum;     //Random Company Name generated ..
                //cic.Name = companyName;
                //cic.Code = this.Code + randNum;
                cic.ImportAndBalanceFlag = this.ImportAndBalanceFlag;
                cic.importAndBalanceFlagFieldSpecified = true;
                cic.TaxExStartDate = this.TaxExStartDate;
                cic.TaxExStartDateSpecified = true;
                cic.ImportDailyDetail = this.ImportDailyDetail;
                cic.ImportQTDDetail = this.ImportQTDDetail;
                cic.ImportYTDDetail = this.ImportYTDDetail;
                //cic.TaxExStartDate = this.TaxExStartDate;
                //cic.TaxExStartDateSpecified = true;

                ICompanyImport.temp.Company[0] = cic;

                return true;
            }
            catch (Exception e)
            {
                e.GetType();
                return false;
            }
        }


        private int GenerateRandom(int min, int max)
        {
            Random random = new Random();
            return random.Next(min, max);
        }

        public Address Address
        {
            get
            {
                return this.addressField;
            }
            set
            {
                this.addressField = value;
            }
        }

        /// <remarks/>
        public EffectiveStatus Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }

        /// <remarks/>
        public ServiceType ServiceType
        {
            get
            {
                return this.serviceTypeField;
            }
            set
            {
                this.serviceTypeField = value;
            }
        }

        /// <remarks/>
        public Reporting Reporting
        {
            get
            {
                return this.reportingField;
            }
            set
            {
                this.reportingField = value;
            }
        }

        /// <remarks/>
        public Category Category
        {
            get
            {
                return this.categoryField;
            }
            set
            {
                this.categoryField = value;
            }
        }

        /// <remarks/>
        public Contact Contact
        {
            get
            {
                return this.contactField;
            }
            set
            {
                this.contactField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PayCycle")]
        public PayCycle[] PayCycle
        {
            get
            {
                return this.payCycleField;
            }
            set
            {
                this.payCycleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TaxSetup")]
        public TaxSetup[] TaxSetup
        {
            get
            {
                return this.taxSetupField;
            }
            set
            {
                this.taxSetupField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EmployeeSetup")]
        public EmployeeSetup[] EmployeeSetup
        {
            get
            {
                return this.employeeSetupField;
            }
            set
            {
                this.employeeSetupField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TaxDetail")]
        public TaxDetail[] TaxDetail
        {
            get
            {
                return this.taxDetailField;
            }
            set
            {
                this.taxDetailField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("WithholdingOrder")]
        public WithholdingOrder[] WithholdingOrder
        {
            get
            {
                return this.withholdingOrderField;
            }
            set
            {
                this.withholdingOrderField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime TaxExStartDate
        {
            get
            {
                return this.taxExStartDateField;
            }
            set
            {
                this.taxExStartDateField = Convert.ToDateTime("01-01-2014");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxExStartDateSpecified
        {
            get
            {
                return this.taxExStartDateFieldSpecified;
            }
            set
            {
                this.taxExStartDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime AsOfDate
        {
            get
            {
                return this.asOfDateField;
            }
            set
            {
                this.asOfDateField = Convert.ToDateTime("01-01-2014");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AsOfDateSpecified
        {
            get
            {
                return this.asOfDateFieldSpecified;
            }
            set
            {
                this.asOfDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
      

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DefaultPayCycle
        {
            get
            {
                return this.defaultPayCycleField;
            }
            set
            {
                this.defaultPayCycleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DBAName
        {
            get
            {
                return this.dBANameField;
            }
            set
            {
                this.dBANameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PayrollSoftwareName
        {
            get
            {
                return this.payrollSoftwareNameField;
            }
            set
            {
                this.payrollSoftwareNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string ReferenceNumber
        {
            get
            {
                return this.referenceNumberField;
            }
            set
            {
                this.referenceNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CompanyImportAndBalance ImportAndBalanceFlag
        {
            get
            {
                return this.importAndBalanceFlagField;
            }
            set
            {
                this.importAndBalanceFlagField = CompanyImportAndBalance.Item1;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImportAndBalanceFlagSpecified
        {
            get
            {
                return this.importAndBalanceFlagFieldSpecified;
            }
            set
            {
                this.importAndBalanceFlagFieldSpecified = true;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ImportDailyDetail
        {          ///changed from bool to int
            get
            {
                return this.importDailyDetailField;
            }
            set
            {
                this.importDailyDetailField = 1;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ImportQTDDetail
        {        ///changed from bool to int
            get
            {
                return this.importQTDDetailField;
            }
            set
            {
                this.importQTDDetailField = 1;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ImportYTDDetail
        {        ///changed from bool to int
            get
            {
                return this.importYTDDetailField;
            }
            set
            {
                this.importYTDDetailField = 1;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.crystalsolutioninc.com/CompanyImport2.xsd")]
    public enum CompanyImportAndBalance
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
    }
}